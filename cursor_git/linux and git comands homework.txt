Commands form linux homefork

1. mkdir linux_lecture && touch notes.txt
2. cp notes.txt linux_lecture
3. ll 
4. ll ~ -r
5. mv notes.txt new_notex.txt
6. rm new_notex.txt linux_lecture/notes.txt
7. cd linux_lecture
touch homework.sh
touch -d '2020-01-01 4:15am' homework.sh
touch hw.sh hw1.sh hw2.sh hw1.txt
8. find *.txt
9. mkdir new_lecture && cp .txt new_lecture
10. echo 'echo "linux_lecture"' > homework.sh
11. cat homework.sh
12. chmod u=w homework.sh
13. chmod 700 homework.sh
13a. sudo ./homework
14. echo -e '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n' > homework.sh
15. head -n7 homework.sh
16. echo 'ls' > notes.sh && chmod 777 notes.sh
17. sudo ./notes.sh

Commands from git homework

1. mkdir cursor_git
2. cd cursor_git
3. touch first.py
4. git add first.py
5. git commit -m 'adding first.py'
6. git log
7. touch second.py
8. git add second.py
9. git commit -m 'adding second.py'
10. rm first.py
11. git add first.py
12. git commit -m 'removing first.py'
13. git log
14. git push
15. git branch first
16. git checkout -b second
17. echo 'print("Hello")' > second.py
18. git stash && git checkout first
19. git checkout second && git stash pop
20. git add second.py
21. git commit -m 'Changing second.py'
22. git push
23. git checkout first
24. echo 'print("Cursor")' > second.py
25. git add second.py
26. git commit -m 'Changing second.py'
27. git push
28. git checkout master
29. git merge second
30. git merge first
31. git subl second.py
resolve conflict by text reader (add new command to excist) and save file
git add second.py
git commit -m 'add changes from branch first'
git push



